// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// h1plgc
double h1plgc(double b, IntegerVector x, NumericVector d, NumericVector g);
RcppExport SEXP _raschreg_h1plgc(SEXP bSEXP, SEXP xSEXP, SEXP dSEXP, SEXP gSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type g(gSEXP);
    rcpp_result_gen = Rcpp::wrap(h1plgc(b, x, d, g));
    return rcpp_result_gen;
END_RCPP
}
// hbc
double hbc(IntegerVector x, NumericVector d, double b, NumericVector a);
RcppExport SEXP _raschreg_hbc(SEXP xSEXP, SEXP dSEXP, SEXP bSEXP, SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(hbc(x, d, b, a));
    return rcpp_result_gen;
END_RCPP
}
// hbc_skew
double hbc_skew(IntegerVector x, NumericVector d, double b, NumericVector a, double nu);
RcppExport SEXP _raschreg_hbc_skew(SEXP xSEXP, SEXP dSEXP, SEXP bSEXP, SEXP aSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(hbc_skew(x, d, b, a, nu));
    return rcpp_result_gen;
END_RCPP
}
// huc
double huc(IntegerVector x, NumericVector d, NumericVector a, double b, NumericVector z, NumericVector beta);
RcppExport SEXP _raschreg_huc(SEXP xSEXP, SEXP dSEXP, SEXP aSEXP, SEXP bSEXP, SEXP zSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(huc(x, d, a, b, z, beta));
    return rcpp_result_gen;
END_RCPP
}
// raschlik
double raschlik(NumericVector d, IntegerMatrix X, NumericVector bmax, NumericVector a, IntegerVector np);
RcppExport SEXP _raschreg_raschlik(SEXP dSEXP, SEXP XSEXP, SEXP bmaxSEXP, SEXP aSEXP, SEXP npSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bmax(bmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type np(npSEXP);
    rcpp_result_gen = Rcpp::wrap(raschlik(d, X, bmax, a, np));
    return rcpp_result_gen;
END_RCPP
}
// raschlik_skew
double raschlik_skew(NumericVector d, IntegerMatrix X, NumericVector bmax, NumericVector a, IntegerVector np, double nu);
RcppExport SEXP _raschreg_raschlik_skew(SEXP dSEXP, SEXP XSEXP, SEXP bmaxSEXP, SEXP aSEXP, SEXP npSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bmax(bmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type np(npSEXP);
    Rcpp::traits::input_parameter< double >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(raschlik_skew(d, X, bmax, a, np, nu));
    return rcpp_result_gen;
END_RCPP
}
// raschreglik
double raschreglik(NumericVector d, NumericVector a, IntegerMatrix X, NumericVector bmax, NumericMatrix Z, NumericVector beta);
RcppExport SEXP _raschreg_raschreglik(SEXP dSEXP, SEXP aSEXP, SEXP XSEXP, SEXP bmaxSEXP, SEXP ZSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type X(XSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bmax(bmaxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(raschreglik(d, a, X, bmax, Z, beta));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_raschreg_h1plgc", (DL_FUNC) &_raschreg_h1plgc, 4},
    {"_raschreg_hbc", (DL_FUNC) &_raschreg_hbc, 4},
    {"_raschreg_hbc_skew", (DL_FUNC) &_raschreg_hbc_skew, 5},
    {"_raschreg_huc", (DL_FUNC) &_raschreg_huc, 6},
    {"_raschreg_raschlik", (DL_FUNC) &_raschreg_raschlik, 5},
    {"_raschreg_raschlik_skew", (DL_FUNC) &_raschreg_raschlik_skew, 6},
    {"_raschreg_raschreglik", (DL_FUNC) &_raschreg_raschreglik, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_raschreg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
